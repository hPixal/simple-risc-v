$date
	Mon Nov 18 17:54:44 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module control_unit_tb $end
$var wire 2 ! jump [1:0] $end
$var wire 4 " alu_op [3:0] $end
$var wire 5 # SHAMT [4:0] $end
$var wire 1 $ Reg_W $end
$var wire 1 % Reg $end
$var wire 1 & Mem_W $end
$var wire 1 ' Mem_R $end
$var wire 3 ( Data_T [2:0] $end
$var wire 2 ) Data_S [1:0] $end
$var wire 1 * Branch $end
$var wire 1 + ALU_S $end
$var reg 5 , RD2 [4:0] $end
$var reg 1 - clk $end
$var reg 1 . flags $end
$var reg 3 / funct3 [2:0] $end
$var reg 7 0 funct7 [6:0] $end
$var reg 5 1 in_shamt [4:0] $end
$var reg 7 2 opcode [6:0] $end
$var reg 1 3 rst $end
$scope module uut $end
$var wire 1 4 CLK $end
$var wire 5 5 RD2 [4:0] $end
$var wire 1 6 RESET $end
$var wire 1 - clk $end
$var wire 1 . flags $end
$var wire 3 7 funct3 [2:0] $end
$var wire 7 8 funct7 [6:0] $end
$var wire 5 9 in_shamt [4:0] $end
$var wire 7 : opcode [6:0] $end
$var wire 1 3 rst $end
$var wire 2 ; jump [1:0] $end
$var wire 4 < alu_op [3:0] $end
$var wire 5 = SHAMT [4:0] $end
$var wire 1 $ Reg_W $end
$var wire 1 % Reg $end
$var wire 3 > RI [2:0] $end
$var wire 1 & Mem_W $end
$var wire 1 ' Mem_R $end
$var wire 2 ? LS [1:0] $end
$var wire 1 @ EXC $end
$var wire 3 A Data_T [2:0] $end
$var wire 2 B Data_S [1:0] $end
$var wire 1 * Branch $end
$var wire 3 C BJ [2:0] $end
$var wire 1 + ALU_S $end
$scope module alu_deco $end
$var wire 5 D RD2 [4:0] $end
$var wire 1 E RI $end
$var wire 5 F SHAMT [4:0] $end
$var wire 4 G alu_op [3:0] $end
$var wire 3 H funct3 [2:0] $end
$var wire 7 I funct7 [6:0] $end
$var wire 5 J in_shamt [4:0] $end
$var reg 2 K aux_S [1:0] $end
$var reg 5 L aux_SHAMT [4:0] $end
$var reg 4 M aux_alu_op [3:0] $end
$upscope $end
$scope module data_deco $end
$var wire 3 N Data_T [2:0] $end
$var wire 3 O funct3 [2:0] $end
$var wire 2 P LS [1:0] $end
$var reg 3 Q aux_data [2:0] $end
$upscope $end
$scope module head $end
$var wire 1 + ALU_S $end
$var wire 3 R BJ [2:0] $end
$var wire 1 4 CLK $end
$var wire 2 S Data_S [1:0] $end
$var wire 1 @ EXC $end
$var wire 2 T LS [1:0] $end
$var wire 1 ' Mem_R $end
$var wire 1 & Mem_W $end
$var wire 1 6 RST $end
$var wire 1 $ Reg_W $end
$var wire 1 - clk $end
$var wire 7 U opcode [6:0] $end
$var wire 1 3 rst $end
$var wire 3 V RI [2:0] $end
$var reg 1 W aux_ALU_S $end
$var reg 3 X aux_BJ [2:0] $end
$var reg 2 Y aux_Data_S [1:0] $end
$var reg 1 Z aux_EXC $end
$var reg 2 [ aux_LS [1:0] $end
$var reg 1 \ aux_Mem_R $end
$var reg 1 ] aux_Mem_W $end
$var reg 3 ^ aux_RI [2:0] $end
$var reg 1 _ aux_Reg_W $end
$upscope $end
$scope module jump_deco $end
$var wire 3 ` BJ [2:0] $end
$var wire 1 * Branch $end
$var wire 1 @ EXC $end
$var wire 1 % Reg $end
$var wire 1 . flags $end
$var wire 3 a funct3 [2:0] $end
$var wire 2 b jump [1:0] $end
$var wire 1 3 rst $end
$var reg 1 c aux_B $end
$var reg 1 d aux_branch $end
$var reg 2 e aux_jump [1:0] $end
$var reg 1 f aux_reg $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
1f
b10 e
0d
0c
b10 b
b0 a
b0 `
0_
b0 ^
0]
0\
b0 [
0Z
b0 Y
b0 X
0W
b0 V
b0 U
b0 T
b0 S
b0 R
b101 Q
b0 P
b0 O
b101 N
b1 M
b0 L
b0 K
b0 J
b0 I
b0 H
b1 G
b0 F
0E
b0 D
b0 C
b0 B
b101 A
0@
b0 ?
b0 >
b0 =
b1 <
b10 ;
b0 :
b0 9
b0 8
b0 7
z6
b0 5
z4
03
b0 2
b0 1
b0 0
b0 /
0.
0-
b0 ,
0+
0*
b0 )
b101 (
0'
0&
1%
0$
b0 #
b1 "
b10 !
$end
#5000
b11 !
b11 ;
b11 b
b11 e
0%
0f
1@
1Z
1-
#10000
0-
b110011 2
b110011 :
b110011 U
#15000
b10 !
b10 ;
b10 b
b10 e
1%
1f
1E
1$
1_
0@
0Z
b1 >
b1 V
b1 ^
1-
#20000
0-
b10011 2
b10011 :
b10011 U
#25000
0E
1+
1W
b10 >
b10 V
b10 ^
1-
#30000
0-
1.
b1100011 2
b1100011 :
b1100011 U
#35000
b1 !
b1 ;
b1 b
b1 e
0%
0f
1*
1c
1E
0+
0W
0$
0_
b1 C
b1 R
b1 `
b1 X
b101 >
b101 V
b101 ^
1-
#40000
b100 (
b100 A
b100 N
b100 Q
b0 !
b0 ;
b0 b
b0 e
0*
0c
0-
0.
b10 /
b10 7
b10 H
b10 O
b10 a
b11 2
b11 :
b11 U
#45000
b1 !
b1 ;
b1 b
b1 e
b0 (
b0 A
b0 N
b0 Q
0E
1'
1\
1+
1W
1$
1_
b1 )
b1 B
b1 S
b1 Y
b0 C
b0 R
b0 `
b0 X
b10 ?
b10 P
b10 T
b10 [
b110 >
b110 V
b110 ^
1-
#50000
0-
b100011 2
b100011 :
b100011 U
#55000
b100 (
b100 A
b100 N
b100 Q
0'
0\
1&
1]
0$
0_
b1 ?
b1 P
b1 T
b1 [
1-
#60000
b101 (
b101 A
b101 N
b101 Q
b10 !
b10 ;
b10 b
b10 e
1%
1f
0-
b0 /
b0 7
b0 H
b0 O
b0 a
b1101111 2
b1101111 :
b1101111 U
#65000
0&
0]
0+
0W
1$
1_
b11 )
b11 B
b11 S
b11 Y
b100 C
b100 R
b100 `
b100 X
b0 ?
b0 P
b0 T
b0 [
b0 >
b0 V
b0 ^
1-
#70000
0-
b110111 2
b110111 :
b110111 U
#75000
b10 )
b10 B
b10 S
b10 Y
b0 C
b0 R
b0 `
b0 X
1-
#80000
0-
b10111 2
b10111 :
b10111 U
#85000
0$
0_
b0 )
b0 B
b0 S
b0 Y
b10 C
b10 R
b10 `
b10 X
1-
#90000
0-
